<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    

        
    <Style x:Key="MaterialMenu" TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource Primary}"/>
        <Setter Property="Foreground" Value="{StaticResource Text}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>   
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Height="48" Margin="24 0" IsItemsHost="True" Rows="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="{StaticResource Primary}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        
        <!-- Item Container -->
        <!--<Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="MenuItem">
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource TopLevelHeaderBorderColor}" Opacity="1"/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        -->
    </Style>
        
    <!-- Top Level Header -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" BorderThickness="0 0 0 4">
            <Border.BorderBrush>
                <SolidColorBrush x:Name="borderBrush" Color="{StaticResource PrimaryColor}"/>
            </Border.BorderBrush>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <ContentPresenter 
                Margin="24 8 24 12" 
                ContentSource="Header" 
                TextBlock.Foreground="{StaticResource TabControlHeaderText}"
                VerticalAlignment="Center" 
                RecognizesAccessKey="True"/>

                <Popup x:Name="Popup" 
                       Placement="Relative"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" BorderBrush="{StaticResource TabControlBorderBrush}" BorderThickness="0" Background="{StaticResource TabControlBorderBackground}" Padding="0">
                        <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                            <StackPanel HorizontalAlignment="Left" IsItemsHost="True"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </StackPanel>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>           

            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.25" Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color" To="Yellow"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Duration="0:0:0.5" Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color" To="{StaticResource PrimaryColor}"/>
                        </Storyboard>                            
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>

            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="Yellow"/>
            </Trigger>
            
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="2"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0 12"/>
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Top Level Item -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" BorderThickness="0" Background="Orange">
            <Grid>
                <ContentPresenter ContentSource="Header" RecognizesAccessKey="True"/>
            </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="Brown"/>        
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>        
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- sub level header-->
<!--
    <ControlTemplate 
        x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
        TargetType="MenuItem">
        <Border Name="Border" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Text"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    Name="Icon"
                    Margin="0"
                    VerticalAlignment="Center"
                    ContentSource="Icon"/>
                <ContentPresenter 
                    Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Margin="0"
                           DockPanel.Dock="Right"/>
                <Path 
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z" 
                    Fill="Purple" />
                <Popup 
                    Name="Popup"
                    Placement="Right"
                    HorizontalOffset="0" 
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" 
                    Focusable="False"
                    PopupAnimation="Fade">
                    
                    <Border 
                        Name="SubmenuBorder"
                        SnapsToDevicePixels="True"
                        BorderThickness="1" >
                                 Background="{StaticResource WindowBackgroundBrush}"
                        BorderBrush="{StaticResource SolidBorderBrush}"

                        <StackPanel  
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Green"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    -->
    
    <!-- Sub Menu Item -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">        
        <Border Name="Border" BorderThickness="0" BorderBrush="Transparent">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!--
                <ContentPresenter 
                    Name="Icon" 
                    Margin="16,0,0,0" 
                    VerticalAlignment="Center" 
                    ContentSource="Icon"/>
                
                <Border 
                    Name="Check"  
                    Width="13" Height="13" 
                    Visibility="Collapsed"
                    Margin="6,0,6,0" 
                    Background="Green"
                    BorderThickness="1"
                    BorderBrush="Yellow">
                    <Path 
                        Name="CheckMark"
                        Width="7" Height="7" 
                        Visibility="Hidden" 
                        SnapsToDevicePixels="False" 
                        Stroke="Black"
                        StrokeThickness="2"
                        Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                -->
                <ContentPresenter                   
                    Margin="16 8"
                    Name="HeaderHost"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True"/>
                
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="1"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Text="{TemplateBinding InputGestureText}"
                           Padding="0"
                           Margin="0"
                           />
            </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
            <!--
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            -->
            
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Gray"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="/Fonts/#Roboto"/>
        <Setter Property="FontWeight" Value="Medium"/>
        
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="{StaticResource TabControlHeaderText}"/>
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>       
            </Trigger>

            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Foreground" Value="{StaticResource TabControlItemText}"/>
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>

            <!-- not used
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            -->
            
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="{StaticResource TabControlItemText}"/>
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>
    
</ResourceDictionary>